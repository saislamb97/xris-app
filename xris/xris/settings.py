"""
Django settings for xris project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from datetime import timedelta
from urllib.parse import urlparse
from corsheaders.defaults import default_headers

# ------------------------------------------------------------------------------  
# BASE DIRECTORY & CORE SETTINGS  
# ------------------------------------------------------------------------------  
BASE_DIR = Path(__file__).resolve().parent.parent  
  
# ------------------------------------------------------------------------------  
# Load environment variables  
# ------------------------------------------------------------------------------  
load_dotenv(dotenv_path=Path(BASE_DIR).parent / '.env')  
  
DEBUG = os.getenv('DEBUG', 'False').lower() in ('true', '1', 'yes')

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'insecure-secret-key-for-dev')
HOST_URL = os.getenv('HOST_URL', 'http://127.0.0.1:8000')

# --- Parse domain only ---
parsed_host = urlparse(HOST_URL).hostname or '127.0.0.1'

# --- Django settings ---
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '[::1]',
    parsed_host,
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    f"{HOST_URL}",
]

X_FRAME_OPTIONS = 'DENY'

# Application definition
INSTALLED_APPS = [
    'daphne',
    'django_daisy',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',

    'corsheaders',
    'django_celery_beat',
    'django_celery_results',

    "graphene_django",

    'allauth',
    'allauth.account',

    "heroicons",

    'main',
    'datasets',
    'processor',
    'subscriptions',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
    'main.middleware.SecurityMiddleware',
]

ROOT_URLCONF = 'xris.urls'
APPEND_SLASH = True
AUTH_USER_MODEL = 'main.User'
SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
            "builtins": [
                "heroicons.templatetags.heroicons",
            ],
        },
    },
]

ASGI_APPLICATION = 'xris.asgi.application'

GRAPHENE = {
    "SCHEMA": "xris.schema.schema"
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Allauth account settings
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_MAX_EMAIL_ADDRESSES = 2
LOGIN_REDIRECT_URL = '/home'
LOGOUT_REDIRECT_URL = '/'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME', 'xris'),
        'USER': os.getenv('DATABASE_USER', 'postgres'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', 'postgres'),
        'HOST': os.getenv('DATABASE_HOST', '127.0.0.1'),
        'PORT': os.getenv('DATABASE_PORT', '5432'),
        'OPTIONS': {
            'connect_timeout': 10,
        },
    }
}

# ------------------------------------------------------------------------------
# REDIS & CACHING
# ------------------------------------------------------------------------------
REDIS_HOST = os.getenv('REDIS_HOST', 'localhost')
REDIS_PORT = os.getenv('REDIS_PORT', '6379')  # Ensure port is a string
REDIS_DB = os.getenv('REDIS_DB', '0')          # Ensure DB is a string
REDIS_URL = f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}"

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': REDIS_URL,
    }
}

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {'hosts': [REDIS_URL]},
    },
}

# Allow bigger uploads
DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100 MB

# Allow more fields in form data
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000

# Maximum single file size allowed (for custom validations)
MAX_FILE_SIZE = 10 * 1024 * 1024  # 10 MB

# Maximum xmpr file counts and size
XMPR_MAX_FILE_COUNT = 100
XMPR_MAX_TOTAL_SIZE_MB = 500  # in MB

# Lat/lon for UTM conversion  
PROCESSOR_LATITUDE = 2.155930  
PROCESSOR_LONGITUDE = 102.732700  

# ------------------------------------------------------------------------------
# EMAIL CONFIGURATION
# ------------------------------------------------------------------------------
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_FROM')

STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY')
STRIPE_WEBHOOK_SECRET = os.getenv('STRIPE_WEBHOOK_SECRET')

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kuala_Lumpur'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

STATICFILES_DIRS = [
    BASE_DIR / "assets",  # if you have custom static assets
]

MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR.parent / 'RadarPagoh'

# Path to your polar2mesh binary  
POLAR2MESH_PATH = BASE_DIR / 'polar2mesh/polar2mesh'  

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DAISY_SETTINGS = {
    "SITE_HEADER": "XRIS Admin",  # Top-left header text
    "SITE_TITLE": "XRIS",  # Browser tab title
    "INDEX_TITLE": "Hi, welcome to XRIS Admin dashboard",  # Main dashboard greeting
    "SITE_LOGO": "/static/img/logo.png",     # Logo in sidebar
    "FAVICON_URL": "/static/img/favicon.ico", # ðŸ‘ˆ Favicon URL
    'LOAD_FULL_STYLES': True,  # If True, loads full DaisyUI components in the admin (useful if you have custom template overrides)
    'SHOW_CHANGELIST_FILTER': False,  # If True, the filter sidebar will open by default on changelist views
    'DONT_SUPPORT_ME': True, # Hide github link in sidebar footer
    "EXTRA_STYLES": ["/static/css/admin_custom.css"],  # ðŸ‘ˆ Add your CSS here
    "EXTRA_SCRIPTS": ["/static/js/admin_custom.js"],   # ðŸ‘ˆ Add your JS here (optional)
    "SIDEBAR_FOOTNOTE": "Â© 2025 XRIS â€“ Powered by UTM",
    'APPS_REORDER': {
        'auth': {
            'icon': 'fa-solid fa-user-shield',
            'name': 'Permissions',
            'divider_title': "Authentication",
            'hide': False,
        },
        'account': {
            'icon': 'fa-solid fa-user',
            'name': 'Accounts',
            'divider_title': 'User Accounts',
        },
        'socialaccount': {
            'icon': 'fa-solid fa-users',
            'name': 'Social Accounts',
        },
        'sites': {
            'icon': 'fa-solid fa-globe',
            'name': 'Sites',
            'divider_title': 'Configuration',
        },

        # Grouped under 'Radar Data'
        'datasets': {
            'icon': 'fa-solid fa-database',
            'name': 'Radar Datasets',
            'divider_title': 'Radar Data',
        },
        'processor': {
            'icon': 'fa-solid fa-gear',
            'name': 'Data Processor',
            # no need to repeat divider_title if already shown
        },

        # Subscriptions group
        'subscriptions': {
            'icon': 'fa-solid fa-crown',
            'name': 'Subscriptions',
            'divider_title': 'Subscription',
        },

        'main': {
            'icon': 'fa-solid fa-earth-asia',
            'name': 'Main',
        },
    }
}
